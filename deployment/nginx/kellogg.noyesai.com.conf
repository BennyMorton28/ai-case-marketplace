# Define upstream servers
upstream kellogg_backend {
    server 172.31.29.105:3000 fail_timeout=10s max_fails=3;  # Internal AWS IP
    keepalive 32;  # Keep connections alive
    
    # High availability settings
    keepalive_timeout 65;
    keepalive_requests 100;
}

# Main HTTPS server
server {
    listen 443 ssl;
    http2 on;  # Modern syntax for HTTP/2
    server_name kellogg.noyesai.com;

    # SSL configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/kellogg.noyesai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kellogg.noyesai.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Root directory for static files
    root /home/ec2-user/app/.next/standalone;

    # Logging configuration
    access_log /var/log/nginx/kellogg.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/kellogg.error.log warn;

    # Global proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header Connection "";  # Enable keepalive connections

    # Timeouts - adjusted for better reliability
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Buffer settings - optimized for stability
    proxy_buffer_size 16k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;

    # Static file handling with aggressive caching
    location /_next/static/ {
        alias /home/ec2-user/app/.next/standalone/.next/static/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Error handling for static files
        try_files $uri $uri/ =404;
        
        # Enable gzip for static files
        gzip_static on;
    }

    # Public static files
    location /static/ {
        alias /home/ec2-user/app/.next/standalone/public/static/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Content-Type-Options "nosniff";
        
        # Error handling for static files
        try_files $uri $uri/ =404;
        
        # Enable gzip for static files
        gzip_static on;
    }

    # Public files in root public directory
    location /public/ {
        alias /home/ec2-user/app/.next/standalone/public/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Content-Type-Options "nosniff";
        
        # Error handling for static files
        try_files $uri $uri/ =404;
        
        # Enable gzip for static files
        gzip_static on;
    }

    # Favicon and other root level static files
    location ~ ^/(favicon\.ico|robots\.txt|sitemap\.xml)$ {
        root /home/ec2-user/app/.next/standalone/public;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri =404;
    }

    # Main location block for Next.js application
    location / {
        proxy_pass http://kellogg_backend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        # Error handling
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_intercept_errors on;

        # Enable gzip for proxied content
        gzip on;
        gzip_proxied any;
        gzip_types 
            text/plain 
            text/css 
            application/json 
            application/javascript 
            text/xml 
            application/xml 
            application/xml+rss 
            text/javascript 
            application/x-javascript 
            font/woff2 
            image/svg+xml;
        gzip_comp_level 6;
        gzip_min_length 1000;
    }

    # Security headers - enhanced for better protection
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Custom error pages with better error handling
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;
    location = /error.html {
        root /usr/share/nginx/html;
        internal;
        ssi on;
    }
}

# Redirect HTTP to HTTPS with better security
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response
    return 301 https://$host$request_uri;
    
    # Security headers for HTTP
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
} 